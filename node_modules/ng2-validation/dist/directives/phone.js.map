{"version":3,"file":"phone.js","sourceRoot":"","sources":["../../src/directives/phone.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqD,eAAe,CAAC,CAAA;AACrE,sBAAuE,gBAAgB,CAAC,CAAA;AAExF,iBAAiC,KAAK,CAAC,CAAA;AAEvC,IAAM,eAAe,GAAQ;IAC3B,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC;IAC7C,KAAK,EAAE,IAAI;CACZ,CAAC;AAMF;IAAA;IAYA,CAAC;IAPC,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,mBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED,iCAAQ,GAAR,UAAS,CAAkB;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAVD;QAAC,YAAK,EAAE;;iDAAA;IALV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,gEAAgE;YAC1E,SAAS,EAAE,CAAC,eAAe,CAAC;SAC7B,CAAC;;sBAAA;IAaF,qBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,sBAAc,iBAY1B,CAAA","sourcesContent":["import { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { CustomValidators } from '../';\n\nconst PHONE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PhoneValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[phone][formControlName],[phone][formControl],[phone][ngModel]',\n  providers: [PHONE_VALIDATOR]\n})\nexport class PhoneValidator implements Validator, OnInit {\n  @Input() phone: string;\n\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = CustomValidators.phone(this.phone);\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n}\n"]}