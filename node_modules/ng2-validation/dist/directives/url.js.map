{"version":3,"file":"url.js","sourceRoot":"","sources":["../../src/directives/url.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAsC,eAAe,CAAC,CAAA;AACtD,sBAA0D,gBAAgB,CAAC,CAAA;AAE3E,iBAAiC,KAAK,CAAC,CAAA;AAEvC,IAAM,aAAa,GAAQ;IACzB,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,YAAY,EAAZ,CAAY,CAAC;IAC3C,KAAK,EAAE,IAAI;CACZ,CAAC;AAMF;IAAA;IAIA,CAAC;IAHC,+BAAQ,GAAR,UAAS,CAAkB;QACzB,MAAM,CAAC,mBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAPH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,0DAA0D;YACpE,SAAS,EAAE,CAAC,aAAa,CAAC;SAC3B,CAAC;;oBAAA;IAKF,mBAAC;AAAD,CAAC,AAJD,IAIC;AAJY,oBAAY,eAIxB,CAAA","sourcesContent":["import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { CustomValidators } from '../';\n\nconst URL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => UrlValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[url][formControlName],[url][formControl],[url][ngModel]',\n  providers: [URL_VALIDATOR]\n})\nexport class UrlValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return CustomValidators.url(c);\n  }\n}"]}