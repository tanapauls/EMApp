{"version":3,"file":"email.js","sourceRoot":"","sources":["../../src/directives/email.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAsC,eAAe,CAAC,CAAA;AACtD,sBAA0D,gBAAgB,CAAC,CAAA;AAE3E,iBAAiC,KAAK,CAAC,CAAA;AAEvC,IAAM,eAAe,GAAQ;IAC3B,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC;IAC7C,KAAK,EAAE,IAAI;CACZ,CAAC;AAMF;IAAA;IAIA,CAAC;IAHC,iCAAQ,GAAR,UAAS,CAAkB;QACzB,MAAM,CAAC,mBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAPH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,gEAAgE;YAC1E,SAAS,EAAE,CAAC,eAAe,CAAC;SAC7B,CAAC;;sBAAA;IAKF,qBAAC;AAAD,CAAC,AAJD,IAIC;AAJY,sBAAc,iBAI1B,CAAA","sourcesContent":["import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { CustomValidators } from '../';\n\nconst EMAIL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n  providers: [EMAIL_VALIDATOR]\n})\nexport class EmailValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return CustomValidators.email(c);\n  }\n}"]}