{"version":3,"file":"max.js","sourceRoot":"","sources":["../../src/directives/max.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqD,eAAe,CAAC,CAAA;AACrE,sBAAuE,gBAAgB,CAAC,CAAA;AAExF,iBAAiC,KAAK,CAAC,CAAA;AAEvC,IAAM,aAAa,GAAQ;IACzB,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,YAAY,EAAZ,CAAY,CAAC;IAC3C,KAAK,EAAE,IAAI;CACZ,CAAC;AAMF;IAAA;IAYA,CAAC;IAPC,+BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,mBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClD,CAAC;IAED,+BAAQ,GAAR,UAAS,CAAkB;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAVD;QAAC,YAAK,EAAE;;6CAAA;IALV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,0DAA0D;YACpE,SAAS,EAAE,CAAC,aAAa,CAAC;SAC3B,CAAC;;oBAAA;IAaF,mBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,oBAAY,eAYxB,CAAA","sourcesContent":["import { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { CustomValidators } from '../';\n\nconst MAX_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n  providers: [MAX_VALIDATOR]\n})\nexport class MaxValidator implements Validator, OnInit {\n  @Input() max: number;\n\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = CustomValidators.max(this.max);\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n}\n"]}