{"version":3,"file":"uuid.js","sourceRoot":"","sources":["../../src/directives/uuid.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqD,eAAe,CAAC,CAAA;AACrE,sBAAuE,gBAAgB,CAAC,CAAA;AAExF,iBAAiC,KAAK,CAAC,CAAA;AAEvC,IAAM,cAAc,GAAQ;IAC1B,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,aAAa,EAAb,CAAa,CAAC;IAC5C,KAAK,EAAE,IAAI;CACZ,CAAC;AAMF;IAAA;IAYA,CAAC;IAPC,gCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,mBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,gCAAQ,GAAR,UAAS,CAAkB;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAVD;QAAC,YAAK,EAAE;;+CAAA;IALV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,6DAA6D;YACvE,SAAS,EAAE,CAAC,cAAc,CAAC;SAC5B,CAAC;;qBAAA;IAaF,oBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,qBAAa,gBAYzB,CAAA","sourcesContent":["import { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { CustomValidators } from '../';\n\nconst UUID_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => UUIDValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[uuid][formControlName],[uuid][formControl],[uuid][ngModel]',\n  providers: [UUID_VALIDATOR]\n})\nexport class UUIDValidator implements Validator, OnInit {\n  @Input() uuid;\n\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = CustomValidators.uuid(this.uuid);\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n}\n"]}